@page "/debtor/list-all"
@model IndexModel
@using PersonalMoney.Pagesedddd
@{
    ViewData["Title"] = "List debtors";
    var lstDebtors = ViewData["lstDebtors"] as List<PersonalMoney.Models.Debtor>;
}

<style>
    .table-data2 th:nth-child(2),
    .table-data2 td:nth-child(2) {
        max-width: 100px !important;
        overflow: hidden !important;
        text-overflow: ellipsis !important;
        white-space: nowrap !important;
    }
</style>

<partial name="_AlertMessage" />

<div class="main-content" style="padding-top: 50px;min-height: 75vh;">
    <div class="section__content section__content--p30">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <!-- DATA TABLE -->
                    <h3 class="title-5 m-b-35">List of debtor</h3>
                    <div class="table-data__tool">
                        <div class="table-data__tool-left">
                            <form method="post" id="filterForm">
                                <div class="input-group" style="display: flex; flex-wrap: wrap;">
                                    <div style="flex: 1;">
                                        <select id="filterType" name="filterType" class="form-control mb-3"
                                                style="border-radius: 15px; width: 150px;">
                                            <option value="total" selected="@(Model.FilterType  == "total")">Total Money</option>
                                            <option value="name" selected="@(Model.FilterType == "name")">Name</option>
                                            <option value="date" selected="@(Model.FilterType == "date")">Date Create</option>
                                        </select>
                                    </div>
                                    <div style="flex: 1;">
                                        <input type="hidden" name="nameDebtor" value="${nameDebtor}">
                                        <div id="filterValueContainer">
                                            <div id="rangeContainer" classappend="@((Model.FilterType == "date") ? "active" : "")">
                                                <div class="input-row" style="display: flex;">
                                                    <input type="number" id="filterValueStart" name="filterValueStart"
                                                           class="form-control"
                                                           style="border-radius: 15px; width: 200px;"
                                                           placeholder="From" value="@Model.FilterValueStart">
                                                    <span class="separator" style="margin: 0 10px;"></span>
                                                    <input type="number" id="filterValueEnd" name="filterValueEnd"
                                                           class="form-control"
                                                           style="border-radius: 15px; width: 200px;" placeholder="To"
                                                           value="@Model.FilterValueEnd">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div style="flex: 1; padding-left:15px">
                                        <input type="hidden" name="link" value="">
                                        <button type="submit" id="searchButton" class="btn btn-secondary"
                                                style="border-radius: 15px;">
                                            <i class="fas fa-search"></i> Filter
                                        </button>
                                    </div>
                                    <div style="flex: 1;padding-left:5px">
                                        <button type="button" id="clearButton" class="btn btn-secondary"
                                                style="border-radius: 15px;">
                                            <i class="fas fa-times"></i> Clear Filter
                                        </button>
                                    </div>
                                </div>
                                <div style="margin-left: 20px;">
                                    <span style="color: red;" id="errorSpan"></span>
                                </div>
                            </form>
                        </div>
                        <div class="table-data__tool-right">
                            <a href="/debtor/create" class="au-btn au-btn-icon au-btn--green au-btn--small">
                                <i class="zmdi zmdi-plus"></i>add new debtor
                            </a>
                        </div>
                    </div>
                    <div class="table-responsive table-responsive-data2">
                        <table class="table table-data2">
                            <thead>
                               <tr>
                                    <th >Id</th>
                                    <th >Name</th>
                                    <th >Address</th>
                                    <th >Phone</th>
                                    <th >Email</th>
                                    <th >Date create</th>
                                    <th >Date update</th>
                                    <th >Total</th>
                                    <th ></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (lstDebtors.Count > 0)
                                {
                                    @foreach (var item in lstDebtors)
                                    {
                                        <tr class="tr-shadow">
                                            <td style="max-width: 100px !important;">
                                                @Html.DisplayFor(modelItem => item.Id)
                                            </td>
                                            <td style="max-width: 260px !important;min-width: 260px !important;">

                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td style="max-width: 180px !important;min-width: 180px !important;">

                                                @Html.DisplayFor(modelItem => item.Address)
                                            </td>
                                            <td style="max-width: 150px !important;min-width: 150px !important;">
                                                @Html.DisplayFor(modelItem => item.Phone)
                                            </td>
                                            <td style="max-width: 260px !important;min-width: 260px !important;">
                                                @Html.DisplayFor(modelItem => item.Email)
                                            </td>

                                            <td style="max-width: 100px !important;min-width: 100px !important;">
                                                @Html.DisplayFor(modelItem => item.DateCreate)
                                            </td>
                                            <td style="max-width: 100px !important;min-width: 100px !important;">
                                                @Html.DisplayFor(modelItem => item.DateUpdate)
                                            </td>
                                            <td style="max-width: 130px !important;min-width: 130px !important;">
                                                @Html.DisplayFor(modelItem => item.TotalMoney)$
                                            </td>
                                            <td>
                                                <div class="table-data-feature">
                                                    <a href="/debtor/update/@item.Id" class="item" data-toggle="tooltip" data-placement="top" title="Edit">
                                                        <i class="zmdi zmdi-edit"></i>
                                                    </a>
                                                    <a href="/debtor/delete/@item.Id" class="item delete-link" data-toggle="tooltip" data-placement="top" title="Delete">
                                                        <i class="zmdi zmdi-delete"></i>
                                                    </a>
                                                    <a href="/debtor/details/debt/@item.Id" class="item" data-toggle="tooltip" data-placement="top" title="Detail">
                                                        <i class="zmdi zmdi-more"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <h3>No data</h3>
                                }

                            </tbody>
                        </table>
                    </div>
                    <!-- END DATA TABLE -->
                </div>
            </div>
        </div>
    </div>
</div>
<partial name="_Paging" model="@ViewBag.pagingModel" />
<script>


        window.addEventListener('DOMContentLoaded', (event) => {
        // Kiểm tra giá trị ban đầu của select box khi trang được load
        var filterTypeSelect = document.getElementById("filterType");
        var filterValueStart = document.getElementById("filterValueStart");
        var filterValueEndInput = document.getElementById("filterValueEnd");
        if (filterTypeSelect.value === "name") {
            filterValueEndInput.style.display = "none"; // Ẩn input nếu giá trị của select là "name"
            filterValueStart.placeholder = "Enter name";
        }

        // Thêm sự kiện change cho select box để ẩn hoặc hiện input khi giá trị thay đổi
        filterTypeSelect.addEventListener("change", function () {
            if (this.value === "name") {
                filterValueEndInput.style.display = "none"; // Ẩn input nếu giá trị của select là "name"
            } else {
                filterValueStart.placeholder = "From";
                filterValueEndInput.style.display = "block"; // Hiện input nếu giá trị của select không phải là "name"
            }
        });
    });



    var inputValueStart = "@Model.FilterValueStart";
    var inputValueEnd = "@Model.FilterValueEnd";
    var filterType = "@Model.FilterType";

    // Lấy tham chiếu đến ô input
    var filterValueStartInput = document.getElementById("filterValueStart");
    var filterValueEndInput = document.getElementById("filterValueEnd");

    // Thiết lập giá trị của ô input và kiểu dữ liệu tương ứng


    if (filterType === "date") {
        filterValueEndInput.style.display = "block";
        filterValueStartInput.type = "date";
        filterValueEndInput.type = "date";
    } else if (filterType === "total") {
        filterValueEndInput.style.display = "block";
        filterValueStartInput.type = "number";
        filterValueEndInput.type = "number";

    }
    else if (filterType === "name") {
        filterValueStartInput.type = "text";
    }

    filterValueStartInput.value = inputValueStart;
    filterValueEndInput.value = inputValueEnd;

    if (filterTypeSelect.value === "name") {
        filterValueEndInput.style.display = "none";
    }

    $(document).ready(function () {
        $('#filterType').change(function () {
            var filterType = $(this).val();
            var filterValueStart = $('#filterValueStart');
            var filterValueEnd = $('#filterValueEnd');

            if (filterType === 'total') {
                filterValueStart.prop('type', 'number');
                filterValueEnd.prop('type', 'number');
            } else if (filterType === 'date') {
                filterValueStart.prop('type', 'date');
                filterValueEnd.prop('type', 'date');
            } else if (filterType === 'name') {
                filterValueStart.prop('type', 'text');
                filterValueEnd.prop('type', 'text');
            }
        });
    });
</script>

<script src="~/js/debt.js"></script>
<script src="~/js/numtoword.js"></script>